{"version":3,"file":"ng4-validation.umd.js","sources":["../src/blacklist-word/directive.ts","../src/util/lang.ts","../src/blacklist-word/validator.ts","../src/index.ts"],"sourcesContent":["import { Directive, Input, forwardRef, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { NG_VALIDATORS, Validator, ValidatorFn, AbstractControl } from '@angular/forms';\n\nimport { blacklistWords } from './';\n\nconst BLACKLIST_WORD_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => BlacklistWordValidator),\n  multi: true\n};\n\n@Directive({\n  selector: '[gt][formControlName],[gt][formControl],[gt][ngModel]',\n  providers: [BLACKLIST_WORD_VALIDATOR]\n})\nexport class BlacklistWordValidator implements Validator, OnInit, OnChanges {\n  @Input() words: string[];\n\n  private validator: ValidatorFn;\n  private onChange: () => void;\n\n  ngOnInit() {\n    this.validator = blacklistWords(this.words);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    for (let key in changes) {\n      if (key === 'blacklistWords') {\n        this.validator = blacklistWords(changes[key].currentValue);\n        if (this.onChange) this.onChange();\n      }\n    }\n  }\n\n  validate(c: AbstractControl): {[key: string]: any} {\n    return this.validator(c);\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this.onChange = fn;\n  }\n}\n","export function isPresent(obj: any): boolean {\n  return obj !== undefined && obj !== null;\n}\n\nexport function isDate(obj: any): boolean {\n  return !/Invalid|NaN/.test(new Date(obj).toString());\n}","import { AbstractControl, Validators, ValidatorFn } from '@angular/forms';\n\nimport { isPresent } from '../util/lang';\n\nexport const blacklistWords = (words: string[]): ValidatorFn => {\n  return (control: AbstractControl): {[key: string]: boolean} => {\n\n    if (!words.length) return null;\n    if (!isPresent(blacklistWords)) return null;\n    if (isPresent(Validators.required(control))) return null;\n\n    console.log(words);\n\n    //let v: number = +control.value;\n    //return v > +blacklistWords ? null : {gt: true};\n\n    return null;\n  };\n};\n","import { NgModule } from '@angular/core';\n\nimport { blacklistWords, BlacklistWordValidator } from './blacklist-word';\n\nexport const CustomValidators: any = {\n  blacklistWords\n};\n\nconst CUSTOM_FORM_DIRECTIVES = [\n  BlacklistWordValidator\n];\n\n@NgModule({\n  declarations: [CUSTOM_FORM_DIRECTIVES],\n  exports: [CUSTOM_FORM_DIRECTIVES]\n})\nexport class CustomFormsModule {\n}\n"],"names":["NG_VALIDATORS","forwardRef","BlacklistWordValidator","Input","Directive","Validators","NgModule"],"mappings":";;;;;;;;;;;;;;;;;AAKA,IAAM,wBAAwB,GAAQ;IACpC,OAAO,EAAEA,4BAAa;IACtB,WAAW,EAAEC,wBAAU,CAAC,cAAM,OAAAC,yBAAsB,GAAA,CAAC;IACrD,KAAK,EAAE,IAAI;CACZ,CAAC;AAMK;IAAA;KA0BN;IApBCA,4CAAQ,GAAR;QACE,IAAI,CAAC,SAAS,GAAG,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC7C;IAEDA,+CAAW,GAAX,UAAY,OAAsB;QAChC,KAAK,IAAI,GAAG,IAAI,OAAO,EAAE;YACvB,IAAI,GAAG,KAAK,gBAAgB,EAAE;gBAC5B,IAAI,CAAC,SAAS,GAAG,cAAc,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC,CAAC;gBAC3D,IAAI,IAAI,CAAC,QAAQ;oBAAE,IAAI,CAAC,QAAQ,EAAE,CAAC;aACpC;SACF;KACF;IAEDA,4CAAQ,GAAR,UAAS,CAAkB;QACzB,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;KAC1B;IAEDA,6DAAyB,GAAzB,UAA0B,EAAc;QACtC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;KACpB;IAxBQ;QAARC,mBAAK,EAAE;;4DAAiB;IADdD,yBAAsB;QAJlCE,uBAAS,CAAC;YACT,QAAQ,EAAE,uDAAuD;YACjE,SAAS,EAAE,CAAC,wBAAwB,CAAC;SACtC,CAAC;OACWF,yBAAsB,CA0BlC;IAAD,gCAAC;CAAA,IAAA,AAED;;mBC3C0B,GAAQ;IAChC,OAAO,GAAG,KAAK,SAAS,IAAI,GAAG,KAAK,IAAI,CAAC;CAC1C,AAED,AAEC;;ACFM,IAAM,cAAc,GAAG,UAAC,KAAe;IAC5C,OAAO,UAAC,OAAwB;QAE9B,IAAI,CAAC,KAAK,CAAC,MAAM;YAAE,OAAO,IAAI,CAAC;QAC/B,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC;YAAE,OAAO,IAAI,CAAC;QAC5C,IAAI,SAAS,CAACG,yBAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YAAE,OAAO,IAAI,CAAC;QAEzD,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;;;QAKnB,OAAO,IAAI,CAAC;KACb,CAAC;CACH,CAAC;;ACdK,IAAM,gBAAgB,GAAQ;IACnC,cAAc,gBAAA;CACf,CAAC;AAEF,IAAM,sBAAsB,GAAG;IAC7BH,yBAAsB;CACvB,CAAC;AAMK;IAAA;KACN;IADY,iBAAiB;QAJ7BI,sBAAQ,CAAC;YACR,YAAY,EAAE,CAAC,sBAAsB,CAAC;YACtC,OAAO,EAAE,CAAC,sBAAsB,CAAC;SAClC,CAAC;OACW,iBAAiB,CAC7B;IAAD,wBAAC;CAAA,IAAA,AAED;;;;;;;"}